#include <unistd.h>

unsigned char swap_bits(unsigned char octet)
{
    return (octet << 4) | (octet >> 4);
}

void print_bits(unsigned char octet)
{
    int i = 7;
    while (i >= 0)
    {
        if (octet & (1 << i))
            write(1, "1", 1);
        else
            write(1, "0", 1);
        i--;
    }
}

int main(void)
{
    unsigned char test = 0x41; // 0100 0001 in binary
    unsigned char swapped = swap_bits(test);

    write(1, "Original: ", 10);
    print_bits(test);
    write(1, "\nSwapped:  ", 11);
    print_bits(swapped);
    write(1, "\n", 1);

    return 0;
}
